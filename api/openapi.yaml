openapi: 3.0.1
info:
  title: "HackerNews"
  version: "1.0.0"
  description: "API REST de nivell 2 per a HackerNews.
  
  Projecte d'ASW de l'Èric Pérez, la Sufang Zhou i l'Aleix Vila"

security:
  - ApiKeyAuth: []   

servers:
  # - url: 'https://fast-falls-50985.herokuapp.com/'
  - url: 'http://3.238.108.74:8080'

paths:
  /api/contributions:
    get:
      tags:
      - Contributions
      description: Retorna totes les contribucions Url ordenades de més a menys puntuació.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
  
  /api/contributions/new:
    post:
      tags:
      - Contributions
      description: Afegeix una contribució establint el seu tipus segons el paràmetres que es passin amb la crida.
      parameters:
      - name: title
        in: header
        description: Títol de la contribució
        required: true
        schema:
          type: string
      - name: url
        in: header
        description: Url de la contribució de tipus url
        required: false
        schema:
          type: string
      - name: text
        in: header
        description: Text de la contribució
        required: false
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
        400:
          description: 'Error: url or text must be set correctly'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  
  
  /api/contributions/newest:
    get:
      tags:
      - Contributions
      description: Retorna totes les contribucions ordenades de més a menys recent.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
  
  /api/contributions/ask:
    get:
      tags:
      - Contributions
      description: Retorna totes les contribucions de tipus Ask ordenades de més a menys recent.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
  
  /contributions/{id}:
    get:
      tags:
      - Contributions
      description: Retorna la informació d'una contribució a través del seu id.
      parameters:
      - name: id
        in: path
        description: ID de la contribució a retornar.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  
  /api/contributions/comments/{id}:
    get:
      tags:
      - Contributions
      description: Retorna tots els comentaris d'una contribució.
      parameters:
      - name: id
        in: path
        description: ID de la contribució.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
    
  /comments/{id}:
    get:
      tags:
      - Comments
      description: Retorna la informació d'un comentari a través del seu id.
      parameters:
      - name: id
        in: path
        description: ID del comentari a retornar.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
                
  /api/comments/replies/{id}:
    get:
      tags:
      - Comments
      description: Retorna totes les replies d'un comentari.
      parameters:
      - name: id
        in: path
        description: ID del comentari.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
    
  /replies/{id}:
    get:
      tags:
      - Replies
      description: Retorna la informació d'una reply a través del seu id.
      parameters:
      - name: id
        in: path
        description: ID de la reply a retornar.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
   
components:

  securitySchemes:
    ApiKeyAuth:        
      type: apiKey
      in: header      
      name: ApiKeyAuth

  schemas:
    Contribution:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        url:
          type: string
        text:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: integer
          
    Comment:
      type: object
      properties:
        id:
          type: integer
        commentText:
          type: string
        contribution:
          $ref: '#/components/schemas/Contribution'
        users_id:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: integer
    
    Reply:
      type: object
      properties:
        id:
          type: integer
        replyText:
          type: string
        comment:
          $ref: '#/components/schemas/Comment'
        users_id:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: integer
          
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        Karma:
          type: integer
        email:
          type: string
        about:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        auth_token:
          type: string
    
    ErrorResult:
      type: object
      properties:
        status:
          type: integer
          enum: [400, 401, 403, 404, 409]
        error: 
          type: string
          enum: ["Bad Request", "Unauthorized", "Forbidden", "Not Found", "Conflict"]
        message: 
          type: string