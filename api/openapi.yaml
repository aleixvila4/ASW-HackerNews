openapi: 3.0.1
info:
  title: "HackerNews"
  version: "1.0.0"
  description: "API REST de nivell 2 per a HackerNews.
  
  Projecte d'ASW de l'Èric Pérez, la Sufang Zhou i l'Aleix Vila"

security:
  - ApiKeyAuth: []   

servers:
  # - url: 'https://fast-falls-50985.herokuapp.com/'
  - url: 'http://3.239.44.53:8080'

paths:
  /api/contributions:
    get:
      tags:
      - Contributions
      description: Retorna totes les contribucions Url ordenades de més a menys puntuació.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
  
  /api/contributions/new:
    post:
      tags:
      - Contributions
      description: Afegeix una nova contribució
      requestBody:
        description: Titol, autor, url i text de la contribució
        content:
          application/json:
            schema:
              required:
              - title
              - url
              - text
              type: object
              properties:
                title:
                  type: string
                url:
                  type: string
                text:
                  type: string
        required: true
      responses:
        201:
          description: Tweet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddContributionResult'
        400:
          description: 'Error: Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  
  
  /api/contributions/newest:
    get:
      tags:
      - Contributions
      description: Retorna totes les contribucions ordenades de més a menys recent.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
  
  /api/contributions/ask:
    get:
      tags:
      - Contributions
      description: Retorna totes les contribucions de tipus Ask ordenades de més a menys recent.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
  
  /contributions/{id}:
    get:
      tags:
      - Contributions
      description: Retorna la informació d'una contribució a través del seu id.
      parameters:
      - name: id
        in: path
        description: ID de la contribució a retornar.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
    
  /api/contributions/{id}:
    delete:
        tags:
        - Contributions
        description: Esborra la contribució
        parameters:
        - name: id
          in: path
          description: ID de la contribució a esborrar
          required: true
          schema:
            type: integer
            format: int
        responses:
          204:
            description: Contribution esborrat
            content:
              application/json: {}
          404:
            description: 'Error: Not Found'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResult'
          401:
            description: 'Error: Unauthorized'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResult'
          403:
            description: 'Error: Forbidden'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResult'
        
    put:
      tags:
      - Contributions
      description:
        Edita la informació d'una contribució
      parameters:
        - name: id
          in: path
          description: ID de la contribució a retornar.
          required: true
          schema:
            type: integer
            format: int
      requestBody:
        description: Titol, autor, url i text de la contribució
        content:
          application/json:
            schema:
              required:
              - title
              - text
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
        required: true
      responses:
        200:
          description: successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        401:
            description: 'Error: Unauthorized'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResult'
        403:
            description: 'Error: Forbidden'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResult'


                
  
  
  /api/contributions/comments/{id}:
    get:
      tags:
      - Contributions
      description: Retorna tots els comentaris d'una contribució.
      parameters:
      - name: id
        in: path
        description: ID de la contribució.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
    
  /comments/{id}:
    get:
      tags:
      - Comments
      description: Retorna la informació d'un comentari a través del seu id.
      parameters:
      - name: id
        in: path
        description: ID del comentari a retornar.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
                
  /api/comments/replies/{id}:
    get:
      tags:
      - Comments
      description: Retorna totes les replies d'un comentari.
      parameters:
      - name: id
        in: path
        description: ID del comentari.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
    
  /replies/{id}:
    get:
      tags:
      - Replies
      description: Retorna la informació d'una reply a través del seu id.
      parameters:
      - name: id
        in: path
        description: ID de la reply a retornar.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
   
components:

  securitySchemes:
    ApiKeyAuth:        
      type: apiKey
      in: header      
      name: ApiKeyAuth

  schemas:
    Contribution:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        url:
          type: string
        text:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: integer
          
    AddContributionResult:
      type: object
      properties:
        new_contribution:
          $ref: '#/components/schemas/Contribution'
          
    Comment:
      type: object
      properties:
        id:
          type: integer
        commentText:
          type: string
        contribution:
          $ref: '#/components/schemas/Contribution'
        users_id:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: integer
    
    Reply:
      type: object
      properties:
        id:
          type: integer
        replyText:
          type: string
        comment:
          $ref: '#/components/schemas/Comment'
        users_id:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: integer
          
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        Karma:
          type: integer
        email:
          type: string
        about:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        auth_token:
          type: string
    
    ErrorResult:
      type: object
      properties:
        status:
          type: integer
          enum: [400, 401, 403, 404, 409]
        error: 
          type: string
          enum: ["Bad Request", "Unauthorized", "Forbidden", "Not Found", "Conflict"]
        message: 
          type: string